/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DrivesIndexImport } from './routes/drives/index'
import { Route as DrivesLayoutDrivesImport } from './routes/drives/_layout-drives'
import { Route as DrivesLayoutDrivesQuizzesImport } from './routes/drives/_layout-drives/quizzes'
import { Route as DrivesLayoutDrivesInfoImport } from './routes/drives/_layout-drives/info'
import { Route as DrivesLayoutDrivesDriveIDImport } from './routes/drives/_layout-drives/$driveID'

// Create Virtual Routes

const DrivesImport = createFileRoute('/drives')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const DrivesRoute = DrivesImport.update({
  path: '/drives',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DrivesIndexRoute = DrivesIndexImport.update({
  path: '/',
  getParentRoute: () => DrivesRoute,
} as any)

const DrivesLayoutDrivesRoute = DrivesLayoutDrivesImport.update({
  id: '/_layout-drives',
  getParentRoute: () => DrivesRoute,
} as any)

const DrivesLayoutDrivesQuizzesRoute = DrivesLayoutDrivesQuizzesImport.update({
  path: '/quizzes',
  getParentRoute: () => DrivesLayoutDrivesRoute,
} as any)

const DrivesLayoutDrivesInfoRoute = DrivesLayoutDrivesInfoImport.update({
  path: '/info',
  getParentRoute: () => DrivesLayoutDrivesRoute,
} as any)

const DrivesLayoutDrivesDriveIDRoute = DrivesLayoutDrivesDriveIDImport.update({
  path: '/$driveID',
  getParentRoute: () => DrivesLayoutDrivesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/drives': {
      id: '/drives'
      path: '/drives'
      fullPath: '/drives'
      preLoaderRoute: typeof DrivesImport
      parentRoute: typeof rootRoute
    }
    '/drives/_layout-drives': {
      id: '/drives/_layout-drives'
      path: '/drives'
      fullPath: '/drives'
      preLoaderRoute: typeof DrivesLayoutDrivesImport
      parentRoute: typeof DrivesRoute
    }
    '/drives/': {
      id: '/drives/'
      path: '/'
      fullPath: '/drives/'
      preLoaderRoute: typeof DrivesIndexImport
      parentRoute: typeof DrivesImport
    }
    '/drives/_layout-drives/$driveID': {
      id: '/drives/_layout-drives/$driveID'
      path: '/$driveID'
      fullPath: '/drives/$driveID'
      preLoaderRoute: typeof DrivesLayoutDrivesDriveIDImport
      parentRoute: typeof DrivesLayoutDrivesImport
    }
    '/drives/_layout-drives/info': {
      id: '/drives/_layout-drives/info'
      path: '/info'
      fullPath: '/drives/info'
      preLoaderRoute: typeof DrivesLayoutDrivesInfoImport
      parentRoute: typeof DrivesLayoutDrivesImport
    }
    '/drives/_layout-drives/quizzes': {
      id: '/drives/_layout-drives/quizzes'
      path: '/quizzes'
      fullPath: '/drives/quizzes'
      preLoaderRoute: typeof DrivesLayoutDrivesQuizzesImport
      parentRoute: typeof DrivesLayoutDrivesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  DrivesRoute: DrivesRoute.addChildren({
    DrivesLayoutDrivesRoute: DrivesLayoutDrivesRoute.addChildren({
      DrivesLayoutDrivesDriveIDRoute,
      DrivesLayoutDrivesInfoRoute,
      DrivesLayoutDrivesQuizzesRoute,
    }),
    DrivesIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/drives"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/drives": {
      "filePath": "drives",
      "children": [
        "/drives/_layout-drives",
        "/drives/"
      ]
    },
    "/drives/_layout-drives": {
      "filePath": "drives/_layout-drives.tsx",
      "parent": "/drives",
      "children": [
        "/drives/_layout-drives/$driveID",
        "/drives/_layout-drives/info",
        "/drives/_layout-drives/quizzes"
      ]
    },
    "/drives/": {
      "filePath": "drives/index.tsx",
      "parent": "/drives"
    },
    "/drives/_layout-drives/$driveID": {
      "filePath": "drives/_layout-drives/$driveID.tsx",
      "parent": "/drives/_layout-drives"
    },
    "/drives/_layout-drives/info": {
      "filePath": "drives/_layout-drives/info.tsx",
      "parent": "/drives/_layout-drives"
    },
    "/drives/_layout-drives/quizzes": {
      "filePath": "drives/_layout-drives/quizzes.tsx",
      "parent": "/drives/_layout-drives"
    }
  }
}
ROUTE_MANIFEST_END */
